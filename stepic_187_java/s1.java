/*
Каждая строчка сценария пьесы дана в следующем виде: 
Роль: текст

Текст может содержать любые символы.

Напишите метод, который будет группировать строчки по ролям, пронумеровывать их 
и возвращать результат в виде готового текста (см. пример). Каждая группа 
распечатывается в следующем виде:

Роль:
i) текст
j) текст2
...
==перевод строки==

i и j -- номера строк в сценарии. Индексация строчек начинается с единицы, 
выводить группы следует в соответствии с порядком ролей. Переводы строк между 
группами обязательны, переводы строк в конце текста не учитываются. 

Заметим, что вам предстоит обработка огромной пьесы в 50 000 строк для 10 ролей – 
соответственно, неправильная сборка результирующей строчки может выйти за ограничение 
по времени.

Sample Input:
roles:
Городничий
Аммос Федорович
Артемий Филиппович
Лука Лукич
textLines:
Городничий: Я пригласил вас, господа, с тем, чтобы сообщить вам пренеприятное 
известие: к нам едет ревизор.
Аммос Федорович: Как ревизор?
Артемий Филиппович: Как ревизор?
Городничий: Ревизор из Петербурга, инкогнито. И еще с секретным предписаньем.
Аммос Федорович: Вот те на!
Артемий Филиппович: Вот не было заботы, так подай!
Лука Лукич: Господи боже! еще и с секретным предписаньем!
Sample Output:
Городничий:
1) Я пригласил вас, господа, с тем, чтобы сообщить вам пренеприятное известие: к 
нам едет ревизор.
4) Ревизор из Петербурга, инкогнито. И еще с секретным предписаньем.

Аммос Федорович:
2) Как ревизор?
5) Вот те на!

Артемий Филиппович:
3) Как ревизор?
6) Вот не было заботы, так подай!

Лука Лукич:
7) Господи боже! еще и с секретным предписаньем!

*/

private String printTextPerRole(String[] roles, String[] textLines) {
    final int tlSize = textLines.length;
    final int rlSize = roles.length;
    StringBuilder[] result = new StringBuilder[roles.length];
    for(int i = 0; i < rlSize; i++){
        result[i] = new StringBuilder();
    }
    for(int i = 0; i < tlSize; i++){
        int roleEndPos = textLines[i].indexOf(':');
        String role = textLines[i].substring(0, roleEndPos);
        for(int j =0; j < rlSize; j++) {
            if(role.equals(roles[j])){
                result[j].append(Integer.toString(i+1));
                result[j].append(")");
                result[j].append(textLines[i].substring(roleEndPos + 1));
                if(textLines[i].charAt(textLines[i].length() - 1) != '\n'){
                    result[j].append("\n");
                }
            }
        }
    }
    StringBuilder text = new StringBuilder();
    for(int i = 0; i < rlSize; i++) {
        text.append(roles[i]);
        text.append(":\n");
        text.append(result[i]);
        text.append('\n');
    }
    return text.toString();
}